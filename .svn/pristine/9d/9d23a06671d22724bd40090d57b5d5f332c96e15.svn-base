import {
  programemodule
} from '../../../module/programe.js'

var programe = new programemodule
var sliderWidth = 28; // 需要设置slider的宽度，用于计算中间位置
// pages/financial/details/index.js
Page({
  /**
   * 页面的初始数据
   */
  data: {
    type: 1,
    tabs: ["项目介绍", "融资计划", "资源储备", "商业模式"], //写死
    gallery: [{
      name: "适用客户",
      gdata: [],
    }, {
      name: "产品价值",
      gdata: [],
    }], //写死
    cases:{},
    tagsData: [{
      name: "·投资模式",
      color: "#3073E3",
    }, {
      name: "·融资阶段",
      color: "#E64340",
    }, {
      name: "·本轮融资⾦额",
      color: "#E28F19",
    }, {
      name: "·本轮融资估值",
      color: "#09BB07",
    }],
    activeIndex: 0,
    sliderOffset: 0,
    sliderLeft: 0,
    //写死
    iconList: {
      photo: "../../../assets/images/icon/icon-phone-gray.png",
      email: "../../../assets/images/icon/icon-email-gray.png",
      position: "../../../assets/images/icon/icon-map.png",
      authentication: "../../../assets/images/icon/icon-authentication-yellow.png"
    },
    // 占位数据 一律用 ---- 数字 0
    item: {
      isAuthentication: 1,
      address: "--------",
      legalPerson: "----",
      name: "--------",
      coTag: [{
          coTagName: "----",
          coTagType: 0
        },
        {
          coTagName: "----",
          coTagType: 0
        }
      ],
      logo: "",
      id: 0,
      companyTemplate: "--------",
      bgId: 0,
      setUpTime: "0000-00-00"
    },
    pid: 0,
    sub: {},
    projectIntro: {}, //项目数据
    label: [], //标签
    amount: '', //标签2

    financingValuation: [], //融资估值
    financingAmount: [], //融资金额

    phase: [], //融资阶段
    his: [{
      time: '0000.00.00',
      investmentAmount: '--亿人民币',
      phase: '--轮',
      investors: ['-----', '-----', '-----', '-----', ]
    }], //·历史融资
    plans: [{
      name: '·资⾦使⽤规划'
    }, {
      name: '·业务规划'
    }], //·资⾦使⽤规划·业务规划
    resources: [{
      name: '产品研发'
    }, {
      name: ' 知识产权'
    }, {
      name: ' 渠道布局'
    }, {
      name: ' 运营资质'
    }, ], //资源储备
    businessModel: [{
        name: '产品定位'
      },
      {
        name: '空间趋势'
      },
      {
        name: '目标客户'
      },
      {
        name: '价值主张'
      },
      {
        name: '渠道通路'
      },
      {
        name: '收入模式'
      },
        {
            name: '竞争优势'
        },
      {
        name: '成本构成'
      },
    ], //商业模式
    isEdit: false, // 默认不显示
    userId: -1, //缓存userid
    companyId: '-1', //缓存公司id
    cooperation:[],//战略合作
    stateType:`3`,//显示功能图标
  },
  onGoNextPage() {
    let info = {}
    info.companyname = this.data.item.name
    info.projectname = this.data.projectIntro.name
    info.projectintro = this.data.projectIntro.intro
    info.logo = this.data.item.logo
    info.legalPerson = this.data.item.legalPerson
    info.amount = this.data.amount
    info.companyId = this.data.companyId
    info.pid = this.data.pid
    info = JSON.stringify(info);
    wx.navigateTo({
      url: `../contactme/index?info=${info}`,
    })
    // wx.redirectTo({
    //     url: '../../mine/cardDetails/cardDetails?mycardid=' + mycardid + '&from=' + from
    // })
  },
  //tap切换
  tabClick(e) {
    this.setData({
      sliderOffset: e.currentTarget.offsetLeft,
      activeIndex: e.currentTarget.id
    });
    switch (this.data.activeIndex) {
      case '1':
        this._randerTwoData()
        break
      case '2':
        this._randerTreData()
        break
      case '3':
        this._randerFouData()
        break

    }
    // console.log(this.data.activeIndex)

  },
  _setNav() {
    var that = this;
    wx.getSystemInfo({
      success: function(res) {
        that.setData({
          sliderLeft: (res.windowWidth / that.data.tabs.length - sliderWidth) / 2,
          sliderOffset: res.windowWidth / that.data.tabs.length * that.data.activeIndex
        });
      }
    });
  },
  _randerFouData() {
    programe.getProjectDetail({
      projectId: this.data.pid,
      type: 4,
    }).then(res => {
      // console.log(res);
      let businessModel = this.data.businessModel
      let businessModelres = res.businessModel
      businessModel[0].bData = businessModelres.positioning
      businessModel[1].bData = businessModelres.trend
      businessModel[2].bData = businessModelres.targetCustomer
      businessModel[3].bData = businessModelres.valueProposition
      businessModel[4].bData = businessModelres.channel
      businessModel[5].bData = businessModelres.revenueModel
      businessModel[6].bData = businessModelres.productsAdvantage

      businessModel[7].bData = businessModelres.costStructure
      this.setData({
        businessModel, //商业模式
      })
    })
  },
  _randerTreData() {
    programe.getProjectDetail({
      projectId: this.data.pid,
      type: 3,
    }).then(res => {
      // console.log(res)
      let resources = this.data.resources
      let resourcesReserves = res.resourcesReserves
      let develop = resourcesReserves.develop
      let propertyRights = resourcesReserves.propertyRights
      let channelLayout = resourcesReserves.channelLayout
      let qualification = resourcesReserves.qualification
      let cooperation = resourcesReserves.cooperation
      resources[0].rData = develop
      resources[1].rData = propertyRights
      resources[2].rData = channelLayout
      resources[3].rData = qualification
      // resources[4].rData = cooperation
      this.setData({
        resources, //
        cooperation
      })
    })
  },
  _randerTwoData() {
    programe.getProjectDetail({
      projectId: this.data.pid,
      type: 2,
    }).then(res => {
      console.log(res)
      let financingInfo = res.financingInfo
      let model = financingInfo.model||''
      let phase = financingInfo.phase||''
      let financingAmount = financingInfo.financingAmount||''
      let financingValuation = financingInfo.financingValuation||''
      model = programe.splitbycomma(model, false)
      phase = programe.splitbycomma(phase, false)
      financingAmount = programe.splitbycomma(financingAmount, false)
      financingValuation = programe.splitbycomma(financingValuation, false)
      let tagsData = this.data.tagsData
      tagsData[0].tData = model //融资计划 - 投资模式
      tagsData[1].tData = phase //融资阶
      tagsData[2].tData = financingAmount //本轮融资
      tagsData[3].tData = financingValuation //本轮融资估值
      let investment = financingInfo.investment
      let his = []
      investment.forEach(item => {
        item.investors = programe.splitbycomma(item.investors, false)
        his.push(item)
      })
      let plans = this.data.plans
      plans[0].pData = financingInfo.usePlan
      plans[1].pData = financingInfo.businessplanning
      this.setData({
        tagsData, //
        his, //历史投资
        plans, //投资规划 计划
      })
    })
  },
  _randerOneData(id) {
    programe.getProjectDetail({
      projectId: id,
      type: 1,
    }).then(res => {
      let projectIntro = res.projectIntro
      let item = res.projectIntro.companyInfo
      let companyId = item.id || ''
      if (item.name) {
        item.textlogo = item.name.substring(0, 2)
      }
      item.coTag = item.tag
      var string = res.projectIntro.label
      var label = programe.splitbycomma(string)
      label = label.join('/')
      var arr = []
      if (projectIntro.amount){
        arr.push(projectIntro.amount)
      }
      if (projectIntro.phase){
        arr.push(projectIntro.phase)
      }
      if (projectIntro.city){
        arr.push(projectIntro.city)
      }
      let amount = arr.join('·')
      let contact = projectIntro.contact
      let coreTeam = projectIntro.coreTeam
      let customer = projectIntro.customer
      let value = projectIntro.value
      let cases = projectIntro.cases
      let gallery = this.data.gallery
      gallery[0].gdata = customer
      gallery[1].gdata = value
      // gallery[2].gdata = cases
      console.log(cases)
      this.setData({
        item, //名片
        projectIntro, //
        label, //标签
        amount, //融资标签
        contact, //联系人
        coreTeam, //核心团队
        gallery, //图文介绍集
        companyId, //联系项目传参
        cases,
        stateType: res.stateType||'3'
      })
    })
  },
  onTapDelete() {
    programe.postprojectOperation(this.data.userId, this.data.pid, '3').then(res => {
      wx.showToast({
        title: '删除成功',
        duration: 2000
      })
      wx.navigateBack()
    })
  },
  onTapOut() {
    programe.postprojectOperation(this.data.userId, this.data.pid, '2').then(res => {
      wx.showToast({
        title: '下架成功',
        icon: 'none',
        duration: 2000
      })
      wx.navigateBack()
    })
  },
  onTapIn() {
    if(this.data.stateType!=2){
      return
    }
    programe.postprojectOperation(this.data.userId, this.data.pid, '0').then(res => {
      wx.showToast({
        title: '上架成功',
        duration: 2000
      })
      wx.navigateBack()
    })
  },

  toaddressMaps(e) {
    console.log(e.currentTarget.dataset.adress);
    wx.navigateTo({
      url: "../../mine/companyAddressMaps/companyAddressMaps?address=" + e.currentTarget.dataset.address,
    })
  },


  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    //设置 下划线
    this._setNav();
    console.log(options)
    //projectId
    const id = options.id
    if (options.userId) {
      this.setData({
        isEdit: true,
        userId: options.userId
      })
      console.log(this.data.userId)
    }
    this.setData({
      pid: id
    });
    //渲染数据
    this._randerOneData(id)
    // this._randerTwoData() //
    //   this._randerTreData()
    //   this._randerFouData()
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function(option) {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {
    this.setData({
      isEdit: false
    })
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  },
  onTapShare(){
    wx.showShareMenu({})
  },
  
})
